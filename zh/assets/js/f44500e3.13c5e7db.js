"use strict";(self.webpackChunkeasycraft_documentation=self.webpackChunkeasycraft_documentation||[]).push([[5920],{28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>o});var n=s(96540);const i={},r=n.createContext(i);function a(e){const t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:t},e.children)}},41960:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"integration-platform/System Management/3.1.1-system-creation","title":"3.1 System Customization","description":"Custom system refers to the names of third-party systems or products registered in the integration platform that need to be integrated. In the integration platform, all interfaces and API services are designed for third-party systems, and the integration objects are also third-party systems.","source":"@site/docs/integration-platform/System Management/3.1.1-system-creation.md","sourceDirName":"integration-platform/System Management","slug":"/integration-platform/System Management/3.1.1-system-creation","permalink":"/zh/docs/integration-platform/System Management/3.1.1-system-creation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/integration-platform/System Management/3.1.1-system-creation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"3.1-system-customization","permalink":"/zh/docs/integration-platform/System Management/3.1-system-customization"},"next":{"title":"3.1.2-system-editing","permalink":"/zh/docs/integration-platform/System Management/3.1.2-system-editing"}}');var i=s(74848),r=s(28453);const a={},o="3.1 System Customization",c={},l=[{value:"3.1.1 System Creation",id:"311-system-creation",level:3}];function d(e){const t={h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"31-system-customization",children:"3.1 System Customization"})}),"\n",(0,i.jsx)(t.p,{children:"Custom system refers to the names of third-party systems or products registered in the integration platform that need to be integrated. In the integration platform, all interfaces and API services are designed for third-party systems, and the integration objects are also third-party systems."}),"\n",(0,i.jsx)(t.h3,{id:"311-system-creation",children:"3.1.1 System Creation"}),"\n",(0,i.jsx)(t.p,{children:'System creation is the first step to initiate integration. The connection services and interface conversions created in subsequent chapters must be associated with the system. Systems are created through the "New System" card, which requires basic information and permission settings.'}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.strong,{children:"Input Basic Information:"})}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Instructions:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"System Environment Name"}),": The name of a third-party system or product. Required."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"System Code"}),": This can be filled manually or automatically. Required."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"URL Prefix"}),": Used for process engine calls."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Description"}),": Describes the purpose of the system."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Application Icon"}),": Selected by default when the system is created. Can be changed by clicking the icon."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Status"}),": Determines whether the interfaces in the current system can be called by other modules. It serves as the master switch for the entire system, with the default setting being enabled.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Enabled: Indicates that the current system supports integrated event processing with other modules;"}),"\n",(0,i.jsx)(t.li,{children:'Disabled: Indicates that the current system does not support integration with other modules, and all interface statuses under the current system will be changed to disabled. Only "disabled" systems can be deleted from the integration platform.'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.ol,{start:"2",children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.strong,{children:"Permissions"})}),"\n"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Users"}),": Refers to the permission to call interfaces within this system. This field is empty by default, indicating that all users from other business modules can utilize the system's interfaces. To specify users, click the directory picker widget."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Maintainers"}),": Personnel who can manage the basic information and permissions of the system. The default maintainer is the system creator. Without maintainers' permissions, the system will not be visible in the custom system list."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"After the system is created, it will automatically redirect to the interface management page, where users can create connection services, interface declarations, and interface conversions (for connection services and interface declarations, please refer to Chapter 3; for interface conversions, please refer to Chapter 6)."}),"\n",(0,i.jsx)(t.p,{children:"Click the New button to create SOAP, JDBC, or REST connection services. For details of the connection services and interface declarations created on this page, please refer to the third-party interface connection services and interface declaration list in Chapter 3. For details of the created interface conversions, please refer to the conversion service interface conversion list in Chapter 6."})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);