"use strict";(self.webpackChunkeasycraft_documentation=self.webpackChunkeasycraft_documentation||[]).push([[8899],{14302:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>f,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"integration-platform/5/5.2-connect-flow-api","title":"5.2-connect-flow-api","description":"5.2 Connect Flow API","source":"@site/docs/integration-platform/5/5.2-connect-flow-api.md","sourceDirName":"integration-platform/5","slug":"/integration-platform/5/5.2-connect-flow-api","permalink":"/https://docs.easycraft.ai/docs/integration-platform/5/5.2-connect-flow-api","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/integration-platform/5/5.2-connect-flow-api.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"5.1.4-connection-flow-import-and-export","permalink":"/https://docs.easycraft.ai/docs/integration-platform/5/5.1.4-connection-flow-import-and-export"},"next":{"title":"5.2.1-connection-flow-api-management","permalink":"/https://docs.easycraft.ai/docs/integration-platform/5/5.2.1-connection-flow-api-management"}}');var a=n(74848),i=n(28453);const c={},r=void 0,s={},l=[{value:"5.2 Connect Flow API",id:"52-connect-flow-api",level:2}];function p(t){const e={h2:"h2",p:"p",...(0,i.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{id:"52-connect-flow-api",children:"5.2 Connect Flow API"}),"\n",(0,a.jsx)(e.p,{children:"Connection Flow APIs are mainly built-in API interface services provided by various business modules of the MK system. When certain open or integration capabilities are enabled, these APIs are automatically created and become available for selection in the connection flow."})]})}function f(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(p,{...t})}):p(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>c,x:()=>r});var o=n(96540);const a={},i=o.createContext(a);function c(t){const e=o.useContext(i);return o.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:c(t.components),o.createElement(i.Provider,{value:e},t.children)}}}]);