"use strict";(self.webpackChunkeasycraft_documentation=self.webpackChunkeasycraft_documentation||[]).push([[8535],{28453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>c});var o=n(96540);const i={},a=o.createContext(i);function r(t){const e=o.useContext(a);return o.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:r(t.components),o.createElement(a.Provider,{value:e},t.children)}},51205:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"integration-platform/7/7.3.1-authorization-creation","title":"7.3.1-authorization-creation","description":"7.3.1 Authorization Creation","source":"@site/docs/integration-platform/7/7.3.1-authorization-creation.md","sourceDirName":"integration-platform/7","slug":"/integration-platform/7/7.3.1-authorization-creation","permalink":"/easycraft-documentation/docs/integration-platform/7/7.3.1-authorization-creation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/integration-platform/7/7.3.1-authorization-creation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"7.3-authorization-management","permalink":"/easycraft-documentation/docs/integration-platform/7/7.3-authorization-management"},"next":{"title":"7.3.2-authorization-modification","permalink":"/easycraft-documentation/docs/integration-platform/7/7.3.2-authorization-modification"}}');var i=n(74848),a=n(28453);const r={},c=void 0,s={},l=[{value:"7.3.1 Authorization Creation",id:"731-authorization-creation",level:3}];function u(t){const e={h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h3,{id:"731-authorization-creation",children:"7.3.1 Authorization Creation"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Process of Creating Account Authorization"}),": Integration Platform -> API Gateway -> Authorization Mgt -> Create"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Instructions for Authorization Completion:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Policy Name"}),": Name of the new authorization. Required."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Access Mode"}),": There are two access modes Account Access and Anonymous Access. The default is Account Access. Anonymous Access does not perform authorization management to the account."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Account Name"}),": Select from the pull-down menu; Select from the account names created in Account Mgt. Required."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Accessible API services"}),": Select APIs from the API service list in the pull-down menu. Required. Open API must support authorization at the interface level rather than the service level."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Available Client IPs"}),": Specifies the client IPs that can access the API. Empty by default, meaning there are no restrictions on client IPs."]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Note: Authorization Mgt can provide dual authorization for both the account and the client IP, or separately for either the account or the client IP. If an authorization management includes both account and client IP, access is only permitted when both conditions are met."}),"\n",(0,i.jsx)(e.p,{children:"Different authorization settings can repeatedly configure the available client IPs and accessible APIs for the same account. The final authorization scope for the account is the union of all configurations."})]})}function h(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(u,{...t})}):u(t)}}}]);