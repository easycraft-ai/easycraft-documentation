"use strict";(self.webpackChunkeasycraft_documentation=self.webpackChunkeasycraft_documentation||[]).push([[9295],{18729:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"low-code-platform/2.10.3-database-mgt","title":"2.10.3-database-mgt","description":"2.10.3 Database Mgt","source":"@site/docs/low-code-platform/2.10.3-database-mgt.md","sourceDirName":"low-code-platform","slug":"/low-code-platform/2.10.3-database-mgt","permalink":"/easycraft-documentation/docs/low-code-platform/2.10.3-database-mgt","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/low-code-platform/2.10.3-database-mgt.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"2.10.2-to-do-task-parameter-configuration","permalink":"/easycraft-documentation/docs/low-code-platform/2.10.2-to-do-task-parameter-configuration"},"next":{"title":"2.11-basic-data","permalink":"/easycraft-documentation/docs/low-code-platform/2.11-basic-data"}}');var n=a(74848),i=a(28453);const o={},r=void 0,l={},c=[{value:"2.10.3 Database Mgt",id:"2103-database-mgt",level:3},{value:"2.10.3.1 Database List",id:"21031-database-list",level:4},{value:"2.10.3.2 Data Source Configuration",id:"21032-data-source-configuration",level:4}];function d(e){const t={h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"2103-database-mgt",children:"2.10.3 Database Mgt"}),"\n",(0,n.jsx)(t.p,{children:"Database management primarily involves configuration of data sources from different types of databases, with the system featuring a built-in local database."}),"\n",(0,n.jsx)(t.h4,{id:"21031-database-list",children:"2.10.3.1 Database List"}),"\n",(0,n.jsx)(t.p,{children:"Introduction to the database listing page:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Search"}),": Search database names."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Operation"}),": Provides a [Create] option, which opens a database configuration dialog for external data source setup."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Database fields"}),": Database name, type, description, creator, create time"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Database operations"}),":\r\na) Edit: Click the edit icon to access the corresponding external data source editing page.\r\nb) Delete: Click the delete icon to remove the data source."]}),"\n"]}),"\n",(0,n.jsx)(t.h4,{id:"21032-data-source-configuration",children:"2.10.3.2 Data Source Configuration"}),"\n",(0,n.jsx)(t.p,{children:'Click "Create" to slide out the new window from the right side of the desktop.'}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Database title"}),": Required, maximum of 50 Chinese characters."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Database type"}),": Required, dropdown, supports four types: Oracle, MySQL, SQL Server, PostgreSQL. After selecting the type, the corresponding JDBC driver and connection URL are automatically populated."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"JDBC driver"}),": Required, automatically populated based on the database type."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"URL link"}),": Required. Automatically filled based on the database type, then modify the corresponding IP, port number, and database name in the link according to actual use."]}),"\n",(0,n.jsx)(t.li,{children:"Oracle data source supports configuration of the user (SCHEMA) parameter."}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Username"}),": Required, the username for the connected system database."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Password"}),": Required. This is the database password for the connected system. Supports switching to plaintext input mode, with encrypted input as the default setting."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Users"}),": Optional. If left it blank, it is available to everyone."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Description"}),": Optional, multi-line input field."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Submit"}),': When clicking submit, the system checks whether all fields on the page have been entered. If all fields are completed, the dialog box closes and displays an "Operation Successful" prompt. The list is automatically refreshed simultaneously.']}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Test"}),': Click this action to automatically verify the connection to the database. If connected, it returns a "Test Successful" prompt; if unable to connect, it returns a "Test Failed" prompt.']}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Cancel"}),": Close the dialog directly."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>r});var s=a(96540);const n={},i=s.createContext(n);function o(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);