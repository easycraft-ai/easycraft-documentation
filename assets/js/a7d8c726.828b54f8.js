"use strict";(self.webpackChunkeasycraft_documentation=self.webpackChunkeasycraft_documentation||[]).push([[5673],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},47477:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"organization-&-permission-management/2/2.5.3 New Organization","title":"2.5.3 New Organization","description":"2.5.3 New Organization","source":"@site/docs/organization-&-permission-management/2/2.5.3 New Organization.md","sourceDirName":"organization-&-permission-management/2","slug":"/organization-&-permission-management/2/2.5.3 New Organization","permalink":"/https://docs.easycraft.ai/docs/organization-&-permission-management/2/2.5.3 New Organization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/organization-&-permission-management/2/2.5.3 New Organization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"2.5.2 Basic Business Rules","permalink":"/https://docs.easycraft.ai/docs/organization-&-permission-management/2/2.5.2 Basic Business Rules"},"next":{"title":"2.5.4 Edit Organization","permalink":"/https://docs.easycraft.ai/docs/organization-&-permission-management/2/2.5.4 Edit Organization"}}');var r=t(74848),s=t(28453);const a={},o=void 0,l={},c=[{value:"2.5.3 New Organization",id:"253-new-organization",level:3}];function p(e){const n={h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"253-new-organization",children:"2.5.3 New Organization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Superior Institution/Department (Superior Org/Sub-Org)"}),": Automatically displayed, cannot be selected."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If it's empty, the newly added institution will be a top-level node under the root directory."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Institution (Org) Type"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"When Superior Org is empty, Org Type will list all types."}),"\n",(0,r.jsx)(n.li,{children:"When superior Org type is internal Org, Org Type will list all types."}),"\n",(0,r.jsx)(n.li,{children:"When superior Org type is external Org , Org Type will be the same as the superior's type."}),"\n",(0,r.jsx)(n.li,{children:"When superior Org type is internal Sub-Org, Org Type will be all external Org types."}),"\n",(0,r.jsx)(n.li,{children:"When superior Org type is external Sub-Org, Org type will be empty (Cannot create an external Org)."}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);