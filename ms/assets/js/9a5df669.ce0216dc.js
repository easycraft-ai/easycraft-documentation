"use strict";(self.webpackChunkeasycraft_documentation=self.webpackChunkeasycraft_documentation||[]).push([[7717],{28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var t=n(96540);const r={},a=t.createContext(r);function i(e){const s=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:s},e.children)}},71355:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"process-management/chapter-3-console/3.7-process-design/3.7.3-process-data","title":"3.7.3-process-data","description":"3.7.3 Process Data","source":"@site/docs/process-management/chapter-3-console/3.7-process-design/3.7.3-process-data.md","sourceDirName":"process-management/chapter-3-console/3.7-process-design","slug":"/process-management/chapter-3-console/3.7-process-design/3.7.3-process-data","permalink":"/ms/docs/process-management/chapter-3-console/3.7-process-design/3.7.3-process-data","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/process-management/chapter-3-console/3.7-process-design/3.7.3-process-data.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"3.7.2-process-node","permalink":"/ms/docs/process-management/chapter-3-console/3.7-process-design/3.7.2-process-node"},"next":{"title":"3.7.4-business-methods","permalink":"/ms/docs/process-management/chapter-3-console/3.7-process-design/3.7.4-business-methods"}}');var r=n(74848),a=n(28453);const i={},o=void 0,c={},l=[{value:"3.7.3 Process Data",id:"373-process-data",level:3},{value:"3.7.3.1 Process Variables",id:"3731-process-variables",level:3},{value:"Key Characteristics:",id:"key-characteristics",level:3},{value:"Common Use Cases &amp; Examples:",id:"common-use-cases--examples",level:3},{value:"1. Bridging External Data to a Process Form",id:"1-bridging-external-data-to-a-process-form",level:4},{value:"2. Dynamic Branching Based on External Conditions",id:"2-dynamic-branching-based-on-external-conditions",level:4},{value:"3. Staging Data for Multi-Step Processes",id:"3-staging-data-for-multi-step-processes",level:4}];function d(e){const s={br:"br",code:"code",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h3,{id:"373-process-data",children:"3.7.3 Process Data"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.strong,{children:"Process Engine"})," integrates with third-party systems to enable data flow across multiple forms and systems, ultimately implementing end-to-end process integration. If the MK process engine attaches with forms built in the system, then we can see those data fields in ",(0,r.jsx)(s.strong,{children:"\u201cDesigned Forms.\u201d"})]}),"\n",(0,r.jsx)(s.p,{children:"But when connecting with third-party systems, the MK process engine does not provide corresponding forms nor store data, so all business data required for process execution is retrieved in real time from third-party systems. Therefore, during the design of the process template, we must configure data field mappings between the process template and third-party system APIs during template creation. These mappings enable automatic data retrieval from connected systems during process execution."}),"\n",(0,r.jsx)("div",{style:{display:"flex",justifyContent:"left"},children:(0,r.jsx)("img",{src:"/img/process data page.png",alt:"Portal Diagram",width:"800"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Figure 3.7\u201314 Process Data Page"})}),"\n",(0,r.jsx)(s.h3,{id:"3731-process-variables",children:"3.7.3.1 Process Variables"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Process Variables"}),' are dynamic data containers used within workflow automation systems to capture, store, and transfer context-specific information throughout a process instance. They act as the "memory" of a workflow, enabling:']}),"\n",(0,r.jsx)("div",{style:{display:"flex",justifyContent:"left"},children:(0,r.jsx)("img",{src:"/img/Process Variables.png",alt:"Portal Diagram",width:"800"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Contextual Decision-Making"}),": Execute logic based on real-time process data (e.g., ",(0,r.jsx)(s.code,{children:'_ProcessStatus = "Rejected"'})," \u2192 trigger a notification)."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Audit Trails"}),": Record critical metadata (e.g., who initiated the process, when, and under what title)."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Cross-System Integration"}),": Pass data between systems (e.g., sync ",(0,r.jsx)(s.code,{children:"_ProcessCreator"})," details to CRM)."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"User Interface Customization"}),": Dynamically render forms or approvals using variable values."]}),"\n"]}),"\n",(0,r.jsx)("div",{style:{display:"flex",justifyContent:"left"},children:(0,r.jsx)("img",{src:"/img/context variable in process data.png",alt:"Portal Diagram",width:"800"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Figure 3.7\u201315 Context Variable in Process Data"})}),"\n",(0,r.jsx)(s.h3,{id:"key-characteristics",children:"Key Characteristics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Temporary"}),": Exists only during the process runtime and is cleared after completion."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Dynamic"}),": Can be updated in real-time based on external inputs or intermediate calculations."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Cross-System Compatibility"}),": Enables data exchange between external systems and the process engine when direct integration is restricted."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"common-use-cases--examples",children:"Common Use Cases & Examples:"}),"\n",(0,r.jsx)(s.h4,{id:"1-bridging-external-data-to-a-process-form",children:"1. Bridging External Data to a Process Form"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Scenario"}),":",(0,r.jsx)(s.br,{}),"\n","Your process needs to use a field value from an external database (e.g., a customer\u2019s ID from Salesforce), but the target form in your system cannot directly read from Salesforce."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Solution"}),":"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"Fetch the customer ID from Salesforce via an API."}),"\n",(0,r.jsxs)(s.li,{children:["Store it in a Context Variable (e.g., ",(0,r.jsx)(s.code,{children:"customerID_from_Salesforce"}),")."]}),"\n",(0,r.jsx)(s.li,{children:"Pass this variable to the process form for further processing (e.g., auto-populating a field)."}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Why?"}),(0,r.jsx)(s.br,{}),"\n",'The Context Variable acts as a temporary "holding area" to circumvent direct integration limitations.']}),"\n",(0,r.jsx)(s.h4,{id:"2-dynamic-branching-based-on-external-conditions",children:"2. Dynamic Branching Based on External Conditions"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Scenario"}),":",(0,r.jsx)(s.br,{}),"\n",'A process must decide whether to approve a request based on a field value (e.g., "Risk Score") from an external risk assessment tool, but the process engine cannot query this tool directly during runtime.']}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Solution"}),":"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:'Retrieve the "Risk Score" from the external tool beforehand.'}),"\n",(0,r.jsxs)(s.li,{children:["Store it in a Context Variable (e.g., ",(0,r.jsx)(s.code,{children:"RiskScore"}),")."]}),"\n",(0,r.jsx)(s.li,{children:'Use this variable in a conditional branch (e.g., "If RiskScore > 70, route to manager approval").'}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Why?"}),(0,r.jsx)(s.br,{}),"\n","The Context Variable decouples the process from external system dependencies during execution."]}),"\n",(0,r.jsx)(s.h4,{id:"3-staging-data-for-multi-step-processes",children:"3. Staging Data for Multi-Step Processes"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Scenario"}),":",(0,r.jsx)(s.br,{}),"\n","A process involves multiple teams (e.g., Legal + Finance), and each team adds data (e.g., contract terms, budget approvals) in different forms that must be consolidated before final submission."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Solution"}),":"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["Store each team\u2019s input in separate Context Variables (e.g., ",(0,r.jsx)(s.code,{children:"legalTerms"}),", ",(0,r.jsx)(s.code,{children:"financeApproval"}),")."]}),"\n",(0,r.jsx)(s.li,{children:"Aggregate these variables into a final form for a consolidated document or database entry."}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Why?"}),(0,r.jsx)(s.br,{}),"\n","Context Variables ensure data consistency and availability across non-sequential steps."]})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);