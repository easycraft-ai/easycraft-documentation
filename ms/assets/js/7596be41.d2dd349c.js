"use strict";(self.webpackChunkeasycraft_documentation=self.webpackChunkeasycraft_documentation||[]).push([[3552],{28453:(t,o,e)=>{e.d(o,{R:()=>s,x:()=>i});var a=e(96540);const n={},r=a.createContext(n);function s(t){const o=a.useContext(r);return a.useMemo(function(){return"function"==typeof t?t(o):{...o,...t}},[o,t])}function i(t){let o;return o=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:s(t.components),a.createElement(r.Provider,{value:o},t.children)}},35442:(t,o,e)=>{e.r(o),e.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"low-code-platform/Chapter 2 Instructions/2.14-data-factory/2.14.1-introduction","title":"2.14.1-introduction","description":"2.14.1 Introduction","source":"@site/docs/low-code-platform/Chapter 2 Instructions/2.14-data-factory/2.14.1-introduction.md","sourceDirName":"low-code-platform/Chapter 2 Instructions/2.14-data-factory","slug":"/low-code-platform/Chapter 2 Instructions/2.14-data-factory/2.14.1-introduction","permalink":"/ms/docs/low-code-platform/Chapter 2 Instructions/2.14-data-factory/2.14.1-introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/low-code-platform/Chapter 2 Instructions/2.14-data-factory/2.14.1-introduction.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"2.14-data-factory","permalink":"/ms/docs/low-code-platform/Chapter 2 Instructions/2.14-data-factory/"},"next":{"title":"2.14.2-function-usage","permalink":"/ms/docs/low-code-platform/Chapter 2 Instructions/2.14-data-factory/2.14.2-function-usage"}}');var n=e(74848),r=e(28453);const s={},i=void 0,c={},l=[{value:"2.14.1 Introduction",id:"2141-introduction",level:3}];function d(t){const o={h3:"h3",li:"li",ol:"ol",p:"p",...(0,r.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h3,{id:"2141-introduction",children:"2.14.1 Introduction"}),"\n",(0,n.jsxs)(o.ol,{children:["\n",(0,n.jsxs)(o.li,{children:["\n",(0,n.jsx)(o.p,{children:"The Data Factory is the MK Platform's tool for data processing. It can source data from Low-Code platforms, built-in applications, and integration platforms for further processing. The Data Factory simplifies complex logical calculations by presenting them through node pprrocess, with the results available for data visualization and analysis in portals, reports, and charts."}),"\n"]}),"\n",(0,n.jsxs)(o.li,{children:["\n",(0,n.jsx)(o.p,{children:"Data factories are commonly used for data integration, combining data tables from different locations for comprehensive analysis."}),"\n"]}),"\n",(0,n.jsxs)(o.li,{children:["\n",(0,n.jsx)(o.p,{children:"For example: When calculating monthly bonuses, the [Attendance Days] field from the employee attendance table and the [Employee Performance] field from the employee performance completion table are combined to calculate the employee's monthly bonus. The data factory can retrieve fields from both tables for calculation, ultimately determining the monthly bonus amount."}),"\n"]}),"\n",(0,n.jsxs)(o.li,{children:["\n",(0,n.jsx)(o.p,{children:"Explanation of data factory terminology:\r\nData factory: Contains all data flows and data sources.\r\nData Flow: A data flow processes and transforms raw data sources. Enterprises can configure multiple pipeline to structure data in alignment with business logic.\r\nData source: The origin of data, typically is from this system, such as Low-Code platforms, system applications, integration interfaces, or even reused data flows or data sources from a data factory.\r\nOutput Table: The final processed product of a data flow is presented in tabular format for user viewing."}),"\n"]}),"\n"]})]})}function u(t={}){const{wrapper:o}={...(0,r.R)(),...t.components};return o?(0,n.jsx)(o,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}}}]);