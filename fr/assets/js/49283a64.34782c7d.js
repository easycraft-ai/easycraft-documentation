"use strict";(self.webpackChunkeasycraft_documentation=self.webpackChunkeasycraft_documentation||[]).push([[4714],{24775:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"integration-platform/Conversion Service/9.1-interface-conversion","title":"9.1-interface-conversion","description":"9.1 Interface Conversion","source":"@site/docs/integration-platform/Conversion Service/9.1-interface-conversion.md","sourceDirName":"integration-platform/Conversion Service","slug":"/integration-platform/Conversion Service/9.1-interface-conversion","permalink":"/fr/docs/integration-platform/Conversion Service/9.1-interface-conversion","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/integration-platform/Conversion Service/9.1-interface-conversion.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"Conversion Service","permalink":"/fr/docs/integration-platform/Conversion Service/"},"next":{"title":"Basic Services","permalink":"/fr/docs/integration-platform/Basic Services/"}}');var t=r(74848),s=r(28453);const o={sidebar_position:9},a=void 0,c={},l=[{value:"9.1 Interface Conversion",id:"91-interface-conversion",level:2}];function d(e){const n={h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"91-interface-conversion",children:"9.1 Interface Conversion"}),"\n",(0,t.jsx)(n.p,{children:"In actual business scenarios, when a third-party interface is registered on the integration platform, the data format returned by the third-party interface often does not match the format required for actual business operations. Therefore, the purpose of interface conversion is to convert the output into a parameter format that aligns with business needs."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example of Interface Conversion"}),": The original interface returns three parameters, but only one of them is needed in actual business scenarios. The conversion can be performed using the following steps."]}),"\n",(0,t.jsx)(n.p,{children:"For example, the configuration information for a third-party original interface is as follows:"}),"\n",(0,t.jsx)(n.p,{children:"The returned value of the interface is an object (with three properties: fdId, fdName, and fdOrgType), as follows:"}),"\n",(0,t.jsx)(n.p,{children:"However, in an actual business scenario, a specific node in the process may only require the fdName property of the object. This can be implemented through interface conversion. The detailed steps are as follows:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Basic information Configuration:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Interface Name"}),": Customized."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"System"}),": The system to which this interface belongs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Capability"}),": The system's capability expansion point to which the interface belongs. An interface can belong to multiple capabilities. Optional."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Function Identification"}),": Auto-fill or manually input. Unique."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Usage Scenario"}),": Fetch or Write in"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pagination"}),": Can be enabled or disabled."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter Information:"}),'\r\nImport parameters - Select an interface (original interface) from the system and click "Confirm". The input and output parameters of the selected interface will be automatically extracted and filled in.']}),"\n",(0,t.jsx)(n.p,{children:"Display Effect:"}),"\n",(0,t.jsx)(n.p,{children:"The returned value required by the business scenario is a string, so the returned parameters should be set as follows:"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Conversion Rules Configuration:"})}),"\n",(0,t.jsxs)(n.p,{children:["3-1 ",(0,t.jsx)(n.strong,{children:"Process Variables Configuration"}),": Typically, this process variable is configured to receive the returned value from the original interface function."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Variable Name"}),": Customized."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Variable Code"}),": Customized. Cannot contain Chinese or special characters."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Type"}),": Typically consistent with the original interface."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Value Setting"}),": Users can directly select the interface of the integration platform, which will auto-fill the input parameters. Users can select variables to reference and match them with the input parameters in the parameter information."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["3-2 ",(0,t.jsx)(n.strong,{children:"Configuration Results"}),'\r\nThe process variable has received the returned value of the original function. Now users just need to access the fdName property from the process variables. Click "Save" after configuration.']}),"\n",(0,t.jsx)(n.p,{children:'Click on "Data Query" to verify if the data format is correct after saving.'}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var i=r(96540);const t={},s=i.createContext(t);function o(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);